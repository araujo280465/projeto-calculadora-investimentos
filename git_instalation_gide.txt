🧾 Step 1: Create .gitignore
Save this in the root of your project as .gitignore:

add this to the file
        # .gitignore
        node_modules
        dist
        .env
        .vscode
        .DS_Store


💻 Step 2: Initialize Git & Commit
In your project folder terminal (VS Code or PowerShell):

cd move to the directory you want to install

run this in the terminal
        git init
        git add .
        git commit -m "Initial commit: THE NAME OF YOUR REPOSITORY"


🐱 Step 3: Create Repo on GitHub

Go to https://github.com/new

Repository name: THE NAME OF YOUR Repository (or anything you want)

Leave all options unchecked

Click Create repository

🔗 Step 4: Connect Local to GitHub

GitHub will show you these commands — paste them into your terminal (replace <your-username>)
replace <THE NAME OF YOUR REPOSITORY> with your repository name:

git remote add origin https://github.com/<YOUR-USERNAME>/<THE NAME OF YOUR REPOSITORY>.git
git commit -m "Initial commit: "
git branch -M main
git push -u origin main


✅ You're Done!
Your project is now live on GitHub.

🛠️ Everyday Workflow
To save changes:

git add .
git commit -m "Describe what you changed"
git push



🔁 Create a New Branch
Replace my-feature-branch with a descriptive name.

git checkout -b feature-branch-teste
This creates and switches to the new branch.


🔁 Switch Between Branches

git checkout main         # Go back to the main branch
git checkout feature-branch-teste


🚀 Push Branch to GitHub
Once you've made changes and committed them:

git push origin feature-branch-teste
This will create the branch on GitHub too.

🔄 Merge a Branch into Main
First, switch to the main branch:

git checkout main
git pull origin main      # Make sure it's up to date
git merge feature-branch-teste
Then push the updated main:
git push origin main

🌐 2. Branching on GitHub Website
📌 To create a branch:
Go to your repo on GitHub.

Click the branch selector dropdown (top-left, usually says main).

Type a new branch name and press Enter to create it from main.

🎯 Typical Workflow Example

# Start from main
git checkout main
git pull origin main

# Create a new branch
git checkout -b fix/header-style

# Make changes...

git add .
git commit -m "Fix header layout on mobile"
git push origin fix/header-style





